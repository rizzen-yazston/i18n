= Changelog
Rizzen Yazston

== i18n 0.5.0 (2023-03-??)

WARNING: This update has many API breaking changes for all existing `i18n` crates.

Breaking change is the result of changing the implementation of handling error after reading Andrew Gallant's blog post 14 May 2015.

* Added the `i18n_provider` crate:

** Added `LStringProvider`

* Added the `i18n_provider_sqlite3` crate:

** Added implementation of `LStringProvider` using Sqlite3 backend.

* Updated the `i18n_utility` crate:

** Renamed crate `i18n_utility` to `i18n_registry`.

** Renamed `locale.rs` to `registry.rs`, and updated to use `RegistryError` for error.

** Added `error.rs` file containing `RegistryError` enum.

** Updated `lib.rs` to include `error.rs` file.

** Updated `Cargo.toml` and documentation.

* Updated the `i18n_lstring` crate:

** Minor documentation corrections, and made unit test independent of `icu_locid` crate, though left example using `icu_locid` crate.

* Updated the `i18n_lexer` crate:

** Renamed `lib.rs` to `lexer.rs`:

*** Updated to use `LexerError` for error.

*** Moved the test `tokenise` to its own file `tokenise.rs` in `tests` directory.

** Added `error.rs` file containing `LexerError` enum.

** Added new `lib.rs` to include both `lexer.rs` and `error.rs`.

** Updated `Cargo.toml` and documentation.

** Added Sqlite3 file for supported error language strings.

* Added `i18n_provider` crate:

** Added `provider.rs` file containing `LStringProvider` trait.

** Added `error.rs` file containing `ProviderError` struct.

** Added `lib.rs` to include both `provider.rs` and `error.rs`.

** Updated `Cargo.toml` and documentation.

* Added `i18n_provider_sqlite3` crate:

** Added `provider.rs` file containing `ProviderSqlite3` struct implementing `LStringProvider` trait.

** Added `error.rs` file containing `Sqlite3Error` struct.

** Added `lib.rs` to include both `provider.rs` and `error.rs`.

** Updated `Cargo.toml` and documentation.

* Updated `i18n_pattern` crate:

** Updated `Cargo.toml` and documentation.

** Updated `parser.rs`, `formatter.rs`, and `types.rs`:

*** Updated to use `ParserError` and `FormatterError` for the errors.

*** Moved all tests to their own files `parser.rs` and `formatter.rs` in `tests` directory.

** Added `error.rs` file containing `ParserError` and `FormatterError` enums.

** Updated `lib.rs` to include `error.rs` file.

** Updated `Cargo.toml` and documentation.

** Added Sqlite3 file for supported error language strings.

* Removed `i18n_error` crate as it is no longer needed after update of error handling.


== i18n 0.4.0 (2023-02-24)

WARNING: This update has many API breaking changes for all existing `i18n` crates.

Main feature of this update is the adding of the `i18n_error` crate to provide the `ErrorMessage` to replace all the `String` used for the `Err()` results.

* Added the `i18n_error` crate:

** Added `ErrorMessage` and `ErrorPlaceholderValue`.

* Updated the `i18n_lstring` crate:

** To facilitate the usage of `ErrorMessage`, it is required that the error messages should almost have no crate dependencies, especially at times when the message system will not be used to localise the error message. Thus replaced `Rc<Locale>` with `Rc<String>`, where `String` represents a BCP 47 Language Tag. This affects the `LString` struct, and methods: `new`, and `locale` replaced with `language_tag`.

** Additional change to `new()` parameter `string` to `Into<String>` instead of `String` as there are types that do have methods for type conversions.

** Updated unit tests, examples and documentation to reflect the changes.

* Updated the `i18n_utility` crate:

** Changed `get()`:

*** To return `ErrorMessage` upon locale parsing error,

*** To use `AsRef<str>` instead of `String` for greater ease of use.

*** To return a tuple pair of language tag (`Rc<String>`) and locale (`Rc<Locale>`).

** Added `get_language_tag()` to get only language tag.

** Added `get_locale()` to get only the locale.

** Updated unit tests, examples and documentation to reflect the changes.

* Updated the `i18n_lexer` crate:

** To make use of `ErrorMessage` for errors.

** Change inputs of `&str` to `AsRef<str>` for greater ease of use.

** Updated unit tests, examples and documentation to reflect the changes.

* Updated the `i18n_pattern` crate:

** Updated the `parser` module:

*** To make use of `ErrorMessage` for errors.

*** Removed redundant semantic analysis code as `formatter` does include the semantic analysis.

** Updated the `types` module:

*** Changed `PlaceholderValue` to be an enum.

** Updated the `formatter` module:

*** To make use of `ErrorMessage` for errors.

*** Change the pattern part structs to `PatternPart` enum.

** Updated unit tests, examples and documentation to reflect the changes.


== i18n 0.3.1 (2023-01-29)

* Updated the `i18n_pattern` crate:

** Split types from `parser` into own module `types`.

** Added `formatter` module.

** Removed semantic analysis from `parser` to `formatter` module.

* Minor improvement changes to crates: `i18n_lexer` and `i18n_lstring`.

== i18n 0.3.0 (2022-12-24)

* Added the `i18n_pattern` crate:

** Added `parser` module.

* Added the `i18n_lexer` crate.

== i18n 0.2.0 (2022-10-15)

* Added the `i18n_utility` crate:

** Added `locale` module:

*** Added `LocaleRegistry`

* Fixed all the documentation of the project.

== i18n 0.1.0 (2022-10-13)

* Added the `i18n_lstring` crate.

== i18n 0.0.0 (2022-10-12)

* The `i18n` project's Git repository initialised with:

** .gitignore

** LICENSE-BSD-3-Clause

** README.asciidoc

** CHANGELOG.asciidoc
